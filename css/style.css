@charset "UTF-8";
/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/* 我们之前用的那个normalize.css其实就是一种reset，这里是universe selector */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  /* root font-size */
  font-size: 62.5%; }

body {
  /* These properties are inherited by all children of body */
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  /* 1.7 tims of predefined line weight */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  /* border-box模式下，margin和padding将不再被计入总height，width */
  box-sizing: border-box; }

.header {
  height: 95vh;
  /* the first color background is over img ground */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /* cover means whatever the width of the view point,
    it try to fit the element inside of box */
  background-size: cover;
  /* top means the top side of img stays with top side of box */
  background-position: top;
  /* 4 ccoordinates are 4 points of polygon, 100% are total height of header */
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
  position: relative; }

.header__logo-box {
  /* the reference of two 40pxs is parent with position relative */
  position: absolute;
  top: 4rem;
  left: 4rem; }

.header__logo {
  /* if we set the height, the width will be scale automatically */
  height: 3.5rem; }

.header__text-box {
  /* the top and left side of h1 is pushed 50% of header (parent element) */
  position: absolute;
  top: 40%;
  left: 50%;
  /* the reference is h1 itself */
  transform: translate(-50%, -50%);
  text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* 
    animation-delay: 3s;
    animation-iteration-count: 3; 
    */ }

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.74rem;
  animation: moveInRight 1s ease-out; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translate(1rem); }
  100% {
    opacity: 1;
    /* it means stay right where it is  */
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translate(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

.btn:link,
.btn:visited {
  text-transform: uppercase;
  /* we  don't wanna underline */
  text-decoration: none;
  padding: 1.5rem 4rem;
  /* anchor still inline, but is a block */
  display: inline-block;
  border-radius: 10rem;
  /* all property are animate */
  transition: all .2s;
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-3px);
  /* shadow: x, y, bulr size, color */
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn::after {
  content: '';
  display: inline-block;
  /* 100% of button height and width */
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  /* the reference is btn ? */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--white::after {
  background-color: #fff; }

/* btn in hover state, the presentation of after */
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn--animated {
  animation: moveInBottom .5s ease-out .75s;
  /* it means the style will absolutely not used before animation starts */
  animation-fill-mode: backwards; }
